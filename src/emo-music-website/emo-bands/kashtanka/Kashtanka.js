import "../../styles/tabs.scss"
import "../../styles/list.css"
import "../../styles/bands-page.css"
import "react-image-gallery/styles/css/image-gallery.css"
import { FACE1_CURSOR, FACE2_CURSOR } from '../../../global-const';
import songsData from './songs-lyrics.json';

import React, { useState } from 'react'
import { FiChevronDown } from 'react-icons/fi';
import { FiChevronUp } from 'react-icons/fi';
import { SongLyrics } from "../../components/SongLyrics"
import { Link } from "react-router-dom";
import ImageGallery from "react-image-gallery";

export function Kashtanka() {
    document.documentElement.style.setProperty('--main-cursor', `url(${FACE1_CURSOR})`);
    document.documentElement.style.setProperty('--pointer-cursor', `url(${FACE2_CURSOR})`);
    document.documentElement.style.setProperty('--box-header-color', '#333333');
    document.documentElement.style.setProperty('--box-header-text-color', '#c0c0c0');

    const [selectedSong, setSelectedSong] = useState(null);

    const [toggleState, setToggleState] = useState(1);
    const toggleTab = (index) => {
        setToggleState(index);
    };

    const [isShownSongs1, setIsShownSongs1] = useState(false);
    const [open1, setOpen1] = useState(false);
    const handleClickShowSongs1 = () => {
        setIsShownSongs1(current => !current);
        setOpen1(open => !open);
    };
    const [isShownSongs2, setIsShownSongs2] = useState(false);
    const [open2, setOpen2] = useState(false);
    const handleClickShowSongs2 = () => {
        setIsShownSongs2(current => !current);
        setOpen2(open => !open);
    };
    const [isShownSongs3, setIsShownSongs3] = useState(false);
    const [open3, setOpen3] = useState(false);
    const handleClickShowSongs3 = () => {
        setIsShownSongs3(current => !current);
        setOpen3(open => !open);
    };
    const [isShownSongs4, setIsShownSongs4] = useState(false);
    const [open4, setOpen4] = useState(false);
    const handleClickShowSongs4 = () => {
        setIsShownSongs4(current => !current);
        setOpen4(open => !open);
    };
    const [isShownSongs5, setIsShownSongs5] = useState(false);
    const [open5, setOpen5] = useState(false);
    const handleClickShowSongs5 = () => {
        setIsShownSongs5(current => !current);
        setOpen5(open => !open);
    };

    const images = [
        {
            original: require('./images/kashtanka1.jpg'),
            thumbnail: require('./images/kashtanka1.jpg'),
        },
        {
            original: require('./images/kashtanka2.jpg'),
            thumbnail: require('./images/kashtanka2.jpg'),
        },
        {
            original: require('./images/kashtanka3.jpg'),
            thumbnail: require('./images/kashtanka3.jpg'),
        },
        {
            original: require('./images/kashtanka4.jpg'),
            thumbnail: require('./images/kashtanka4.jpg'),
        },
        {
            original: require('./images/kashtanka5.jpg'),
            thumbnail: require('./images/kashtanka5.jpg'),
        },
        {
            original: require('./images/kashtanka6.webp'),
            thumbnail: require('./images/kashtanka6.webp'),
        },
    ];

    return (
        <div className="bands kashtanka">
            <div className='bands-container'>
                <br />
                <div style={{ margin: '0 auto', textAlign: 'center' }}>
                    <Link className='link-back' to="/emo">
                        <img src={require("../../../main-website/resources/pixels/zJZuQV8.gif")} style={{ height: '15px' }} alt='' />
                        <span >&nbsp;back to emo page&nbsp;</span>
                        <img src={require("../../../main-website/resources/pixels/zJZuQV8.gif")} style={{ width: '15px' }} alt='' />
                    </Link>
                </div>
                <div className="header">
                    <h id="head">Kashtanka</h>
                    <br />
                    <hr />
                    <b> –ñ–∞–Ω—Ä—ã: </b> emo, russian emo, screamo, post-hardcore <br />
                    <b> –ì–æ–¥—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: </b> 2015-present <br />
                    <b> –ú–µ—Å—Ç–æ –æ—Å–Ω–æ–≤–∞–Ω–∏—è: </b> Volgograd, Volgogradskaya oblast', Russia <br />
                </div>
                <div className="data">
                    <br />
                    <div className="tab-bar radius">
                        <button className={toggleState === 1 ? "tab selected" : "tab"} onClick={() => toggleTab(1)}
                            data-text="–û –≥—Ä—É–ø–ø–µ">
                            <span className="icon">–û –≥—Ä—É–ø–ø–µ</span>
                        </button>
                        <button className={toggleState === 2 ? "tab selected" : "tab"} onClick={() => toggleTab(2)}
                            data-text="–î–∏—Å–∫–æ–≥—Ä–∞—Ñ–∏—è">
                            <span className="icon">–î–∏—Å–∫–æ–≥—Ä–∞—Ñ–∏—è / –¢–µ–∫—Å—Ç—ã –ø–µ—Å–µ–Ω</span>
                        </button>
                        <button className={toggleState === 3 ? "tab selected" : "tab"} onClick={() => toggleTab(3)}
                            data-text="–í–∏–¥–æ—Å—ã">
                            <span className="icon">–í–∏–¥–æ—Å—ã</span>
                        </button>
                    </div>
                    <br />
                    <div className={"bands-data"}>
                        <div className="content-tabs">
                            <div
                                className={toggleState === 1 ? "content  active-content" : "content"}
                            >
                                <div className={"Parent"}>
                                    <div style={{ width: '40%' }}>
                                        <div>
                                            <h3> –°–æ—Å—Ç–∞–≤ </h3>
                                            <ol className="rectangle">
                                                <li> <img src={require('../../resources/instruments-images/singer.png')} className={'instrument-image'} alt={''} /> ?</li>
                                                <li> <img src={require('../../resources/instruments-images/guitar.png')} className={'instrument-image'} alt={''} /> ?</li>
                                                <li> <img src={require('../../resources/instruments-images/bass-guitar.png')} className={'instrument-image'} alt={''} /> ?</li>
                                                <li> <img src={require('../../resources/instruments-images/drums.png')} className={'instrument-image'} alt={''} /> ?</li>
                                            </ol>
                                        </div>
                                    </div>
                                    <div style={{ width: '60%', margin: '0 auto' }}>
                                        <div className="image-gallery-bands">
                                            <ImageGallery items={images} thumbnailPosition='right' originalWidth={50} slideInterval={1500} />
                                        </div>
                                    </div>
                                </div>
                                <h3> –ë–∏–æ–≥—Ä–∞—Ñ–∏—è </h3>
                                <br />
                                ¬´–ò—Ç–∞–∫, –Ω–∞—à–∞ –º—ë—Ä—Ç–≤–∞—è –≥—Ä—É–ø–ø–∞ –∑–∞–Ω—è–ª–∞ —Ç—Ä–µ—Ç—å–µ –º–µ—Å—Ç–æ —Å –∞–ª—å–±–æ–º–æ–º "–í–∑–∞–∏–º–Ω–æ—Å—Ç—å" 2018-–≥–æ –≥–æ–¥–∞ –≤ —Ç–æ–ø–µ –¥–µ—Å—è—Ç—ã—Ö –ø–æ –≤–µ—Ä—Å–∏–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –ø–∞–±–ª–∏–∫–∞ Boring Emo. –°–ø–∞—Å–∏–±–æ –≤—Å–µ–º, –∫—Ç–æ —É–ø–æ–º–∏–Ω–∞–ª –Ω–∞—Å –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏.
                                <br /><br />
                                –í–æ—Ç –≤–∞–º –ø–æ —ç—Ç–æ–º—É —Å–ª—É—á–∞—é –º–∞–ª–µ–Ω—å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø–∏—Å–∏ —ç—Ç–æ–≥–æ –∞–ª—å–±–æ–º–∞ –æ—Ç –±–∞—Ä–∞–±–∞–Ω—â–∏–∫–∞ –≥—Ä—É–ø–ø—ã –ê–Ω—Ç–æ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥—É–º–∞—é—Ç, —á—Ç–æ —É –Ω–∞—Å –∑–∞—à–∫–∞–ª–∏–≤–∞–µ—Ç –ß–°–í, –Ω–æ, –∫–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—Å—è, –∏–∑ –ø–µ—Å–Ω–∏ —Å–ª–æ–≤ –Ω–µ –≤—ã–∫–∏–Ω–µ—à—å.
                                <br /><br />
                                "–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –µ—Ö–∞—Ç—å –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –±–∞—Ä–∞–±–∞–Ω—ã, —è –ø–æ–∑–≤–æ–Ω–∏–ª –ú–∏—à–µ, –∏ —Å–∫–∞–∑–∞–ª:"–¢—ã –≤ –∫—É—Ä—Å–µ, —á—Ç–æ –º—ã —Å–µ–π—á–∞—Å –µ–¥–µ–º –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –≤–µ–ª–∏–∫–∏—Ö —ç–º–æ-–∞–ª—å–±–æ–º–æ–≤?". –û–Ω —Å–ø—Ä–æ—Å–∏–ª:"–î–∞? –¢—ã —ç—Ç–æ —á—É–≤—Å—Ç–≤—É–µ—à—å?". –ò —è –æ—Ç–≤–µ—Ç–∏–ª:"–î–∞, —è —ç—Ç–æ —á—É–≤—Å—Ç–≤—É—é"."
                                <br /><br />
                                –ü–æ—ç—Ç–æ–º—É –∑–∞–Ω–∏–º–∞–π—Ç–µ—Å—å –ª—é–±–∏–º—ã–º –¥–µ–ª–æ–º, –≤–µ—Ä—å—Ç–µ –≤ —Å–µ–±—è, –Ω–µ –æ—Ç—Å—Ç—É–ø–∞–π—Ç–µ –ø–µ—Ä–µ–¥ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ - –∏ –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è.
                                <br /><br />
                                –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µüñ§¬ª
                            </div>
                        </div>
                        <div
                            className={toggleState === 2 ? "content  active-content" : "content"}
                        >
                            <div className={"Parent"}>
                                <div className={"child1"}>
                                    <h3 style={{ textAlign: 'center' }}>–ê–ª—å–±–æ–º—ã</h3>
                                    <ul type="none">
                                        <li>
                                            <div onClick={handleClickShowSongs1} className={'albumList'}><img
                                                src={require('./images/–û—à–∏–±–∫–∏.jpg')}
                                                style={{ width: "50px", margin: '5px' }} alt={''} /> ‚Äã–û‚Äã—à‚Äã–∏‚Äã–±‚Äã–∫‚Äã–∏‚Äã (2016) {open1 ? <FiChevronUp size={20} color='white' /> : <FiChevronDown size={20} color='white' />}</div>
                                            {isShownSongs1 && (
                                                <ol className="rectangle">
                                                    <div>
                                                        {songsData.filter(
                                                            item => (item.album || '').includes('‚Äã–û‚Äã—à‚Äã–∏‚Äã–±‚Äã–∫‚Äã–∏‚Äã')
                                                        ).map(u => (
                                                            <>
                                                                <li key={u.key}
                                                                    onClick={() => setSelectedSong(u)}>{u.name}</li>
                                                            </>
                                                        ))}
                                                    </div>
                                                </ol>
                                            )}
                                        </li>
                                        <li>
                                            <div onClick={handleClickShowSongs2} className={'albumList'}><img
                                                src={require('./images/–ò–∂–µ —Å –Ω–∞–º–∏.jpg')}
                                                style={{ width: "50px", margin: '5px' }} alt={''} />–ò‚Äã–∂‚Äã–µ –° –ù‚Äã–∞‚Äã–º‚Äã–∏‚Äã (2016) {open2 ? <FiChevronUp size={20} color='white' /> : <FiChevronDown size={20} color='white' />}</div>
                                            {isShownSongs2 && (
                                                <ol className="rectangle">
                                                    <div>
                                                        {songsData.filter(
                                                            item => (item.album || '').includes('–ò‚Äã–∂‚Äã–µ')
                                                        ).map(u => (
                                                            <>
                                                                <li key={u.key}
                                                                    onClick={() => setSelectedSong(u)}>{u.name}</li>
                                                            </>
                                                        ))}
                                                    </div>
                                                </ol>
                                            )}
                                        </li>
                                        <li>
                                            <div onClick={handleClickShowSongs3} className={'albumList'}><img
                                                src={require('./images/–í–∑–∞–∏–º–Ω–æ—Å—Ç—å.jpg')}
                                                style={{ width: "50px", margin: '5px' }} alt={''} />–í‚Äã–∑‚Äã–∞‚Äã–∏‚Äã–º‚Äã–Ω‚Äã–æ‚Äã—Å‚Äã—Ç‚Äã—å‚Äã (2018) {open3 ?
                                                    <FiChevronUp size={20} color='white' /> : <FiChevronDown size={20} color='white' />}</div>
                                            {isShownSongs3 && (
                                                <ol className="rectangle">
                                                    <div>
                                                        {songsData.filter(
                                                            item => (item.album || '').includes('–í‚Äã–∑‚Äã–∞‚Äã–∏‚Äã–º‚Äã–Ω‚Äã–æ‚Äã—Å‚Äã—Ç‚Äã—å‚Äã')
                                                        ).map(u => (
                                                            <>
                                                                <li key={u.key}
                                                                    onClick={() => setSelectedSong(u)}>{u.name}</li>
                                                            </>
                                                        ))}
                                                    </div>
                                                </ol>
                                            )}
                                        </li>
                                        <li>
                                            <div onClick={handleClickShowSongs4} className={'albumList'}><img
                                                src={require('./images/–ü—Ä–æ—â–∞–π –í–µ—Ä–Ω–∏—Å—å.jpg')}
                                                style={{ width: "50px", margin: '5px' }} alt={''} />–ü‚Äã—Ä‚Äã–æ‚Äã—â‚Äã–∞‚Äã–π‚Äã. –í‚Äã–µ‚Äã—Ä‚Äã–Ω‚Äã–∏‚Äã—Å‚Äã—å (2020) {open4 ? <FiChevronUp size={20} color='white' /> : <FiChevronDown size={20} color='white' />}</div>
                                            {isShownSongs4 && (
                                                <ol className="rectangle">
                                                    <div>
                                                        {songsData.filter(
                                                            item => (item.album || '').includes('–ü‚Äã—Ä‚Äã–æ‚Äã—â‚Äã–∞‚Äã–π‚Äã')
                                                        ).map(u => (
                                                            <>
                                                                <li key={u.key}
                                                                    onClick={() => setSelectedSong(u)}>{u.name}</li>
                                                            </>
                                                        ))}
                                                    </div>
                                                </ol>
                                            )}
                                        </li>
                                        <li>
                                            <div onClick={handleClickShowSongs5} className={'albumList'}><img
                                                src={require('./images/–í–µ—á–Ω–æ–µ –ª–µ—Ç–æ.jpg')}
                                                style={{ width: "50px", margin: '5px' }} alt={''} />–í‚Äã–µ‚Äã—á‚Äã–Ω‚Äã–æ‚Äã–µ –ª‚Äã–µ‚Äã—Ç‚Äã–æ‚Äã (Cover) (2020) {open5 ? <FiChevronUp size={20} color='white' /> : <FiChevronDown size={20} color='white' />}</div>
                                            {isShownSongs5 && (
                                                <ol className="rectangle">
                                                    <div>
                                                        {songsData.filter(
                                                            item => (item.album || '').includes('–í‚Äã–µ‚Äã—á‚Äã–Ω‚Äã–æ‚Äã–µ')
                                                        ).map(u => (
                                                            <>
                                                                <li key={u.key}
                                                                    onClick={() => setSelectedSong(u)}>{u.name}</li>
                                                            </>
                                                        ))}
                                                    </div>
                                                </ol>
                                            )}
                                        </li>
                                    </ul>
                                </div>
                                <div className={"child2"} style={{ borderLeft: '1px solid gray' }}>
                                    {selectedSong ? <SongLyrics song={selectedSong} /> : <div style={{ textAlign: 'center', fontWeight: 'bold' }}>
                                        –ù–∞–∂–º–∏ –ø–æ –∞–ª—å–±–æ–º—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω. –ù–∞–∂–º–∏ –ø–æ –ø–µ—Å–Ω–µ, —á—Ç–æ–±—ã –ø–æ—è–≤–∏–ª—Å—è —Å–∞–º —Ç—Ä–µ–∫, —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å) –∏ –º–æ–π –ø–µ—Ä–µ–≤–æ–¥ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å).
                                        <br />
                                        <img src={require('../../resources/heart-boy-smoking.gif')} style={{ height: "auto", width: '200px', margin: '0 auto', textAlign: 'center' }} alt={''} />
                                    </div>}
                                </div>
                            </div>
                        </div>
                        <div
                            className={toggleState === 3 ? "content  active-content" : "content"}
                        >
                            <div style={{ textAlign: 'center' }}>
                                <h4>Kashtanka: –¶–µ—Ö live</h4>
                                <br />
                                <iframe width="500" height="300" src="https://www.youtube.com/embed/Fxqsr6DqaLI?si=K6KtG_eafcm0VVfl" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
                                <br /><br />
                                <h4>Kashtanka ‚Äì –û—à–∏–±–∫–∏ (Live, 16.10.2022, –ë—É–º–∞–∂–Ω–∞—è —Ñ–∞–±—Ä–∏–∫–∞, –ú–æ—Å–∫–≤–∞)</h4>
                                <br />
                                <iframe width="500" height="300" src="https://www.youtube.com/embed/JUfk4F-OvBE?si=yEJj2PGTtUkUvny8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
                                <br /><br />
                                <h4>–ü—Ä–æ—â–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ü–µ—Ä—Ç –ö–∞—à—Ç–∞–Ω–∫–∏ (16.10.2022)</h4>
                                <br />
                                <iframe width="500" height="300" src="https://www.youtube.com/embed/iRt7ufFMHus?si=p9hOXfGrHeMdFP8e" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br /><br />
        </div>
    );
}
